// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: YituAudioSpeech.proto

package com.yitutech.speech;

/**
 * <pre>
 * 流请求
 * </pre>
 *
 * Protobuf type {@code StreamingSpeechRequest}
 */
public final class StreamingSpeechRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:StreamingSpeechRequest)
    StreamingSpeechRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use StreamingSpeechRequest.newBuilder() to construct.
  private StreamingSpeechRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private StreamingSpeechRequest() {
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new StreamingSpeechRequest();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private StreamingSpeechRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            StreamingSpeechConfig.Builder subBuilder = null;
            if (requestPayloadCase_ == 1) {
              subBuilder = ((StreamingSpeechConfig) requestPayload_).toBuilder();
            }
            requestPayload_ =
                input.readMessage(StreamingSpeechConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((StreamingSpeechConfig) requestPayload_);
              requestPayload_ = subBuilder.buildPartial();
            }
            requestPayloadCase_ = 1;
            break;
          }
          case 18: {
            requestPayloadCase_ = 2;
            requestPayload_ = input.readBytes();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return StreamingProtos.internal_static_StreamingSpeechRequest_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return StreamingProtos.internal_static_StreamingSpeechRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            StreamingSpeechRequest.class, Builder.class);
  }

  private int requestPayloadCase_ = 0;
  private Object requestPayload_;
  public enum RequestPayloadCase
      implements com.google.protobuf.Internal.EnumLite,
          InternalOneOfEnum {
    STREAMINGSPEECHCONFIG(1),
    AUDIODATA(2),
    REQUESTPAYLOAD_NOT_SET(0);
    private final int value;
    private RequestPayloadCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static RequestPayloadCase valueOf(int value) {
      return forNumber(value);
    }

    public static RequestPayloadCase forNumber(int value) {
      switch (value) {
        case 1: return STREAMINGSPEECHCONFIG;
        case 2: return AUDIODATA;
        case 0: return REQUESTPAYLOAD_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public RequestPayloadCase
  getRequestPayloadCase() {
    return RequestPayloadCase.forNumber(
        requestPayloadCase_);
  }

  public static final int STREAMINGSPEECHCONFIG_FIELD_NUMBER = 1;
  /**
   * <pre>
   * 音频流设置
   * </pre>
   *
   * <code>.StreamingSpeechConfig streamingSpeechConfig = 1;</code>
   * @return Whether the streamingSpeechConfig field is set.
   */
  @Override
  public boolean hasStreamingSpeechConfig() {
    return requestPayloadCase_ == 1;
  }
  /**
   * <pre>
   * 音频流设置
   * </pre>
   *
   * <code>.StreamingSpeechConfig streamingSpeechConfig = 1;</code>
   * @return The streamingSpeechConfig.
   */
  @Override
  public StreamingSpeechConfig getStreamingSpeechConfig() {
    if (requestPayloadCase_ == 1) {
       return (StreamingSpeechConfig) requestPayload_;
    }
    return StreamingSpeechConfig.getDefaultInstance();
  }
  /**
   * <pre>
   * 音频流设置
   * </pre>
   *
   * <code>.StreamingSpeechConfig streamingSpeechConfig = 1;</code>
   */
  @Override
  public StreamingSpeechConfigOrBuilder getStreamingSpeechConfigOrBuilder() {
    if (requestPayloadCase_ == 1) {
       return (StreamingSpeechConfig) requestPayload_;
    }
    return StreamingSpeechConfig.getDefaultInstance();
  }

  public static final int AUDIODATA_FIELD_NUMBER = 2;
  /**
   * <pre>
   * 音频数据。每个请求的音频长度最长为60秒。针对实时场景，音频输入的速度超过实时时，性能无法保障，需与依图沟通
   * </pre>
   *
   * <code>bytes audioData = 2;</code>
   * @return The audioData.
   */
  @Override
  public com.google.protobuf.ByteString getAudioData() {
    if (requestPayloadCase_ == 2) {
      return (com.google.protobuf.ByteString) requestPayload_;
    }
    return com.google.protobuf.ByteString.EMPTY;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (requestPayloadCase_ == 1) {
      output.writeMessage(1, (StreamingSpeechConfig) requestPayload_);
    }
    if (requestPayloadCase_ == 2) {
      output.writeBytes(
          2, (com.google.protobuf.ByteString) requestPayload_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (requestPayloadCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (StreamingSpeechConfig) requestPayload_);
    }
    if (requestPayloadCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(
            2, (com.google.protobuf.ByteString) requestPayload_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof StreamingSpeechRequest)) {
      return super.equals(obj);
    }
    StreamingSpeechRequest other = (StreamingSpeechRequest) obj;

    if (!getRequestPayloadCase().equals(other.getRequestPayloadCase())) return false;
    switch (requestPayloadCase_) {
      case 1:
        if (!getStreamingSpeechConfig()
            .equals(other.getStreamingSpeechConfig())) return false;
        break;
      case 2:
        if (!getAudioData()
            .equals(other.getAudioData())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (requestPayloadCase_) {
      case 1:
        hash = (37 * hash) + STREAMINGSPEECHCONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getStreamingSpeechConfig().hashCode();
        break;
      case 2:
        hash = (37 * hash) + AUDIODATA_FIELD_NUMBER;
        hash = (53 * hash) + getAudioData().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static StreamingSpeechRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static StreamingSpeechRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static StreamingSpeechRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static StreamingSpeechRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static StreamingSpeechRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static StreamingSpeechRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static StreamingSpeechRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static StreamingSpeechRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static StreamingSpeechRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static StreamingSpeechRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static StreamingSpeechRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static StreamingSpeechRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(StreamingSpeechRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 流请求
   * </pre>
   *
   * Protobuf type {@code StreamingSpeechRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:StreamingSpeechRequest)
      StreamingSpeechRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return StreamingProtos.internal_static_StreamingSpeechRequest_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return StreamingProtos.internal_static_StreamingSpeechRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              StreamingSpeechRequest.class, Builder.class);
    }

    // Construct using com.yitutech.speech.StreamingSpeechRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      requestPayloadCase_ = 0;
      requestPayload_ = null;
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return StreamingProtos.internal_static_StreamingSpeechRequest_descriptor;
    }

    @Override
    public StreamingSpeechRequest getDefaultInstanceForType() {
      return StreamingSpeechRequest.getDefaultInstance();
    }

    @Override
    public StreamingSpeechRequest build() {
      StreamingSpeechRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public StreamingSpeechRequest buildPartial() {
      StreamingSpeechRequest result = new StreamingSpeechRequest(this);
      if (requestPayloadCase_ == 1) {
        if (streamingSpeechConfigBuilder_ == null) {
          result.requestPayload_ = requestPayload_;
        } else {
          result.requestPayload_ = streamingSpeechConfigBuilder_.build();
        }
      }
      if (requestPayloadCase_ == 2) {
        result.requestPayload_ = requestPayload_;
      }
      result.requestPayloadCase_ = requestPayloadCase_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof StreamingSpeechRequest) {
        return mergeFrom((StreamingSpeechRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(StreamingSpeechRequest other) {
      if (other == StreamingSpeechRequest.getDefaultInstance()) return this;
      switch (other.getRequestPayloadCase()) {
        case STREAMINGSPEECHCONFIG: {
          mergeStreamingSpeechConfig(other.getStreamingSpeechConfig());
          break;
        }
        case AUDIODATA: {
          setAudioData(other.getAudioData());
          break;
        }
        case REQUESTPAYLOAD_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      StreamingSpeechRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (StreamingSpeechRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int requestPayloadCase_ = 0;
    private Object requestPayload_;
    public RequestPayloadCase
        getRequestPayloadCase() {
      return RequestPayloadCase.forNumber(
          requestPayloadCase_);
    }

    public Builder clearRequestPayload() {
      requestPayloadCase_ = 0;
      requestPayload_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        StreamingSpeechConfig, StreamingSpeechConfig.Builder, StreamingSpeechConfigOrBuilder> streamingSpeechConfigBuilder_;
    /**
     * <pre>
     * 音频流设置
     * </pre>
     *
     * <code>.StreamingSpeechConfig streamingSpeechConfig = 1;</code>
     * @return Whether the streamingSpeechConfig field is set.
     */
    @Override
    public boolean hasStreamingSpeechConfig() {
      return requestPayloadCase_ == 1;
    }
    /**
     * <pre>
     * 音频流设置
     * </pre>
     *
     * <code>.StreamingSpeechConfig streamingSpeechConfig = 1;</code>
     * @return The streamingSpeechConfig.
     */
    @Override
    public StreamingSpeechConfig getStreamingSpeechConfig() {
      if (streamingSpeechConfigBuilder_ == null) {
        if (requestPayloadCase_ == 1) {
          return (StreamingSpeechConfig) requestPayload_;
        }
        return StreamingSpeechConfig.getDefaultInstance();
      } else {
        if (requestPayloadCase_ == 1) {
          return streamingSpeechConfigBuilder_.getMessage();
        }
        return StreamingSpeechConfig.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 音频流设置
     * </pre>
     *
     * <code>.StreamingSpeechConfig streamingSpeechConfig = 1;</code>
     */
    public Builder setStreamingSpeechConfig(StreamingSpeechConfig value) {
      if (streamingSpeechConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        requestPayload_ = value;
        onChanged();
      } else {
        streamingSpeechConfigBuilder_.setMessage(value);
      }
      requestPayloadCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * 音频流设置
     * </pre>
     *
     * <code>.StreamingSpeechConfig streamingSpeechConfig = 1;</code>
     */
    public Builder setStreamingSpeechConfig(
        StreamingSpeechConfig.Builder builderForValue) {
      if (streamingSpeechConfigBuilder_ == null) {
        requestPayload_ = builderForValue.build();
        onChanged();
      } else {
        streamingSpeechConfigBuilder_.setMessage(builderForValue.build());
      }
      requestPayloadCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * 音频流设置
     * </pre>
     *
     * <code>.StreamingSpeechConfig streamingSpeechConfig = 1;</code>
     */
    public Builder mergeStreamingSpeechConfig(StreamingSpeechConfig value) {
      if (streamingSpeechConfigBuilder_ == null) {
        if (requestPayloadCase_ == 1 &&
            requestPayload_ != StreamingSpeechConfig.getDefaultInstance()) {
          requestPayload_ = StreamingSpeechConfig.newBuilder((StreamingSpeechConfig) requestPayload_)
              .mergeFrom(value).buildPartial();
        } else {
          requestPayload_ = value;
        }
        onChanged();
      } else {
        if (requestPayloadCase_ == 1) {
          streamingSpeechConfigBuilder_.mergeFrom(value);
        }
        streamingSpeechConfigBuilder_.setMessage(value);
      }
      requestPayloadCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * 音频流设置
     * </pre>
     *
     * <code>.StreamingSpeechConfig streamingSpeechConfig = 1;</code>
     */
    public Builder clearStreamingSpeechConfig() {
      if (streamingSpeechConfigBuilder_ == null) {
        if (requestPayloadCase_ == 1) {
          requestPayloadCase_ = 0;
          requestPayload_ = null;
          onChanged();
        }
      } else {
        if (requestPayloadCase_ == 1) {
          requestPayloadCase_ = 0;
          requestPayload_ = null;
        }
        streamingSpeechConfigBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 音频流设置
     * </pre>
     *
     * <code>.StreamingSpeechConfig streamingSpeechConfig = 1;</code>
     */
    public StreamingSpeechConfig.Builder getStreamingSpeechConfigBuilder() {
      return getStreamingSpeechConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 音频流设置
     * </pre>
     *
     * <code>.StreamingSpeechConfig streamingSpeechConfig = 1;</code>
     */
    @Override
    public StreamingSpeechConfigOrBuilder getStreamingSpeechConfigOrBuilder() {
      if ((requestPayloadCase_ == 1) && (streamingSpeechConfigBuilder_ != null)) {
        return streamingSpeechConfigBuilder_.getMessageOrBuilder();
      } else {
        if (requestPayloadCase_ == 1) {
          return (StreamingSpeechConfig) requestPayload_;
        }
        return StreamingSpeechConfig.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 音频流设置
     * </pre>
     *
     * <code>.StreamingSpeechConfig streamingSpeechConfig = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        StreamingSpeechConfig, StreamingSpeechConfig.Builder, StreamingSpeechConfigOrBuilder>
        getStreamingSpeechConfigFieldBuilder() {
      if (streamingSpeechConfigBuilder_ == null) {
        if (!(requestPayloadCase_ == 1)) {
          requestPayload_ = StreamingSpeechConfig.getDefaultInstance();
        }
        streamingSpeechConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            StreamingSpeechConfig, StreamingSpeechConfig.Builder, StreamingSpeechConfigOrBuilder>(
                (StreamingSpeechConfig) requestPayload_,
                getParentForChildren(),
                isClean());
        requestPayload_ = null;
      }
      requestPayloadCase_ = 1;
      onChanged();;
      return streamingSpeechConfigBuilder_;
    }

    /**
     * <pre>
     * 音频数据。每个请求的音频长度最长为60秒。针对实时场景，音频输入的速度超过实时时，性能无法保障，需与依图沟通
     * </pre>
     *
     * <code>bytes audioData = 2;</code>
     * @return The audioData.
     */
    public com.google.protobuf.ByteString getAudioData() {
      if (requestPayloadCase_ == 2) {
        return (com.google.protobuf.ByteString) requestPayload_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }
    /**
     * <pre>
     * 音频数据。每个请求的音频长度最长为60秒。针对实时场景，音频输入的速度超过实时时，性能无法保障，需与依图沟通
     * </pre>
     *
     * <code>bytes audioData = 2;</code>
     * @param value The audioData to set.
     * @return This builder for chaining.
     */
    public Builder setAudioData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  requestPayloadCase_ = 2;
      requestPayload_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 音频数据。每个请求的音频长度最长为60秒。针对实时场景，音频输入的速度超过实时时，性能无法保障，需与依图沟通
     * </pre>
     *
     * <code>bytes audioData = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearAudioData() {
      if (requestPayloadCase_ == 2) {
        requestPayloadCase_ = 0;
        requestPayload_ = null;
        onChanged();
      }
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:StreamingSpeechRequest)
  }

  // @@protoc_insertion_point(class_scope:StreamingSpeechRequest)
  private static final StreamingSpeechRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new StreamingSpeechRequest();
  }

  public static StreamingSpeechRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<StreamingSpeechRequest>
      PARSER = new com.google.protobuf.AbstractParser<StreamingSpeechRequest>() {
    @Override
    public StreamingSpeechRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new StreamingSpeechRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<StreamingSpeechRequest> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<StreamingSpeechRequest> getParserForType() {
    return PARSER;
  }

  @Override
  public StreamingSpeechRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

